pipeline{
    agent any
    tools{
        maven 'M2_HOME'
    }
    stages{
        stage('sonarqube scan'){
           agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
              steps{
                withSonarQubeEnv('sonarserver'){

                  sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=jodi1007_revision-geoapp'
            }
        }
    }
        stage('maven commands'){
            steps{
                sh 'mvn clean compile install package'
            }
        }
        stage('upload artifacts'){
            steps{
                sh 'curl -uadmin:AP5mZ1TGxbfJg5s8o7m1rRSRP4i -T \
                target/bio*.jar \
                "http://3.89.129.151:8081/artifactory/geoapp1/"'
            }
        }
        stage('image build'){
            steps{
                sh ' aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 166882821092.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t geoapp1 .'
            }
        }
        stage('push image'){
            steps{
                sh 'docker tag geoapp1:latest 166882821092.dkr.ecr.us-east-1.amazonaws.com/geoapp1:${BUILD_ID}'
                sh 'docker push 166882821092.dkr.ecr.us-east-1.amazonaws.com/geoapp1:${BUILD_ID}'
            }
        }
    }
}